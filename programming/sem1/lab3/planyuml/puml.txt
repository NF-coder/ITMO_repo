@startuml
class BasicCharacter {
  + BasicCharacter(String): 
  + enjoyGrass(): void
  + toString(): String
  + goFurther(): void
  + makeStep(): StepStatus
  + reclaimPotatoes(FieldLenght): void
  + makeStepAfterReclaim(): StepStatus
  + equals(Object): boolean
  + tellBadWords(): void
  + saveUnusefulPotatoes(GroundType, int): void
  + getTiredOfWalk(GroundType): void
  + savePotatoesFastly(): void
  + claimPotatoes(int, GroundType): void
  + hashCode(): int
  + leaveField(): void
  + throwPotatoes(): void
  + checkIfClothBroken(): void
  + sleepOnGround(): void
  + bite(): boolean
  + smellFood(): void
  + saveUsefulPotatoes(GroundType, int): void
  + becomeTired(): void
   name: String
   id: int
}
class BecomeTired {
  + BecomeTired(): 
  + becomeTired(): void
}
class BitePotato {
  + BitePotato(RandomWrapper): 
  + bite(): boolean
}
class CharacterCloth {
  + CharacterCloth(): 
   cloth: Cloth
}
class CharacterEnergy {
  + CharacterEnergy(): 
  + energyStepIncriment(): void
   energy: int
}
class CharacterLocation {
  + CharacterLocation(): 
   location: Location
}
class CharacterName {
  + CharacterName(): 
   name: String
}
class CheckIfClothBroken {
  + CheckIfClothBroken(CharacterCloth): 
  + checkIfClothBroken(): void
}
class ClaimPotatoes {
  + ClaimPotatoes(CharacterCloth, CharacterName): 
  + claimPotatoes(int, GroundType): void
}
class Cloth {
  + Cloth(String, int): 
  + equals(Object): boolean
  + makeStep(): void
  + toString(): String
  + hashCode(): int
   potatoes: ArrayList<Potato>
   name: String
   potatoesCount: int
   id: int
   stepIncrement: int
}
enum ClothesEnum << enumeration >> {
  + ClothesEnum(): 
  + values(): ClothesEnum[]
  + valueOf(String): ClothesEnum
  + toCloth(int): Cloth
}
class EnjoyGrass {
  + EnjoyGrass(): 
  + enjoyGrass(): void
}
class FieldEnd {
  + FieldEnd(BasicCharacter, int): 
  + execute(): Location
}
class FieldLenght {
  + FieldLenght(): 
  + incrementFieldLenght(): void
   fieldLenght: int
}
class FieldMiddle {
  + FieldMiddle(BasicCharacter, GroundType): 
  + execute(): Location
}
class FieldStart {
  + FieldStart(BasicCharacter): 
  + execute(): Location
}
class GetTiredOfWalk {
  + GetTiredOfWalk(): 
  + getTiredOfWalk(GroundType): void
}
class GoFurther {
  + GoFurther(): 
  + goFurther(): void
}
enum GroundType << enumeration >> {
  + GroundType(): 
  + values(): GroundType[]
  + valueOf(String): GroundType
  + toString(): String
}
interface IBasicObj << interface >> {
  + equals(Object): boolean
  + hashCode(): int
  + toString(): String
   name: String
   id: int
}
class LeaveField {
  + LeaveField(CharacterName): 
  + leaveField(): void
}
class Location {
  + Location(String, BasicCharacter): 
  + equals(Object): boolean
  + toString(): String
  + hashCode(): int
  + execute(): Location
   character: BasicCharacter
   name: String
   id: int
}
class Main {
  + Main(): 
  + main(String[]): void
}
class MakeSteps {
  + MakeSteps(CharacterEnergy, CharacterName): 
  - makeEnergyStep(): StepStatus
  + makeStepAfterReclaim(): StepStatus
  + makeStep(Cloth): StepStatus
  - makePotatoStep(Cloth): StepStatus
}
class NegativeEnergyException {
  + NegativeEnergyException(): 
}
class NegativePotatoesException {
  + NegativePotatoesException(): 
}
entity Potato << record >> {
  + Potato(boolean): 
   isDelicious: boolean
}
class RandomWrapper {
  + RandomWrapper(): 
  + randomizePotato(): Potato
  + randomizeSmell(): SmellType
  + randomizeGroundType(): GroundType
  + randomizeCloth(): Cloth
  + randomizeFieldLenght(): int
  + ramdomizePotatoesReclamation(int, int): int
  + randomizeEnergy(int, int): int
  + randomizeCanSmell(): boolean
  + randomizePotatoes(): int
}
class ReclaimPotatoes {
  + ReclaimPotatoes(RandomWrapper, CharacterEnergy, CharacterCloth, GoFurther): 
  + reclaimPotatoes(FieldLenght): void
}
class SavePotatoes {
  + SavePotatoes(CharacterCloth, CharacterName): 
  + saveUsefulPotatoes(GroundType, int): void
  + savePotatoesFastly(): void
  + saveUnusefulPotatoes(GroundType, int): void
}
class SleepOnGround {
  + SleepOnGround(): 
  + sleepOnGround(): void
}
class SmellFood {
  + SmellFood(RandomWrapper): 
  + smellFood(): void
}
enum SmellType << enumeration >> {
  + SmellType(): 
  + values(): SmellType[]
  + toString(): String
  + valueOf(String): SmellType
}
enum StepStatus << enumeration >> {
  + StepStatus(): 
  + values(): StepStatus[]
  + valueOf(String): StepStatus
}
class TellBadWords {
  + TellBadWords(CharacterName): 
  + tellBadWords(): void
}
class ThrowPotatoes {
  + ThrowPotatoes(CharacterCloth, CharacterName): 
  + throwPotatoes(): void
}

BasicCharacter            "1" *-[#595959,plain]-> "becomeTired\n1" BecomeTired               
BasicCharacter             -[#595959,dashed]->  BecomeTired               : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "bitePotato\n1" BitePotato                
BasicCharacter             -[#595959,dashed]->  BitePotato                : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "characterCloth\n1" CharacterCloth            
BasicCharacter             -[#595959,dashed]->  CharacterCloth            : "«create»"
BasicCharacter             -[#595959,dashed]->  CharacterEnergy           : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "characterEnergy\n1" CharacterEnergy           
BasicCharacter             -[#595959,dashed]->  CharacterLocation         : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "characterLocation\n1" CharacterLocation         
BasicCharacter            "1" *-[#595959,plain]-> "characterName\n1" CharacterName             
BasicCharacter             -[#595959,dashed]->  CharacterName             : "«create»"
BasicCharacter             -[#595959,dashed]->  CheckIfClothBroken        : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "checkIfClothBroken\n1" CheckIfClothBroken        
BasicCharacter             -[#595959,dashed]->  ClaimPotatoes             : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "claimPotatoes\n1" ClaimPotatoes             
BasicCharacter            "1" *-[#595959,plain]-> "enjoyGrass\n1" EnjoyGrass                
BasicCharacter             -[#595959,dashed]->  EnjoyGrass                : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "getTiredOfWalk\n1" GetTiredOfWalk            
BasicCharacter             -[#595959,dashed]->  GetTiredOfWalk            : "«create»"
BasicCharacter             -[#595959,dashed]->  GoFurther                 : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "goFurther\n1" GoFurther                 
BasicCharacter             -[#008200,dashed]-^  IBasicObj                 
BasicCharacter             -[#595959,dashed]->  LeaveField                : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "leaveField\n1" LeaveField                
BasicCharacter            "1" *-[#595959,plain]-> "makeSteps\n1" MakeSteps                 
BasicCharacter             -[#595959,dashed]->  MakeSteps                 : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "rnd\n1" RandomWrapper             
BasicCharacter             -[#595959,dashed]->  RandomWrapper             : "«create»"
BasicCharacter             -[#595959,dashed]->  ReclaimPotatoes           : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "reclaimPotatoes\n1" ReclaimPotatoes           
BasicCharacter            "1" *-[#595959,plain]-> "savePotatoes\n1" SavePotatoes              
BasicCharacter             -[#595959,dashed]->  SavePotatoes              : "«create»"
BasicCharacter             -[#595959,dashed]->  SleepOnGround             : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "sleepOnGround\n1" SleepOnGround             
BasicCharacter            "1" *-[#595959,plain]-> "smellFood\n1" SmellFood                 
BasicCharacter             -[#595959,dashed]->  SmellFood                 : "«create»"
BasicCharacter             -[#595959,dashed]->  TellBadWords              : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "tellBadWords\n1" TellBadWords              
BasicCharacter             -[#595959,dashed]->  ThrowPotatoes             : "«create»"
BasicCharacter            "1" *-[#595959,plain]-> "throwPotatoes\n1" ThrowPotatoes             
BitePotato                "1" *-[#595959,plain]-> "rnd\n1" RandomWrapper             
CharacterCloth            "1" *-[#595959,plain]-> "cloth\n1" Cloth                     
CharacterEnergy            -[#595959,dashed]->  NegativeEnergyException   : "«create»"
CharacterLocation         "1" *-[#595959,plain]-> "location\n1" Location                  
CheckIfClothBroken        "1" *-[#595959,plain]-> "cloth\n1" CharacterCloth            
ClaimPotatoes             "1" *-[#595959,plain]-> "cloth\n1" CharacterCloth            
ClaimPotatoes             "1" *-[#595959,plain]-> "name\n1" CharacterName             
Cloth                      -[#008200,dashed]-^  IBasicObj                 
Cloth                      -[#595959,dashed]->  NegativePotatoesException : "«create»"
Cloth                     "1" *-[#595959,plain]-> "potatoes\n*" Potato                    
Cloth                      -[#595959,dashed]->  RandomWrapper             : "«create»"
Cloth                     "1" *-[#595959,plain]-> "rnd\n1" RandomWrapper             
ClothesEnum                -[#595959,dashed]->  Cloth                     : "«create»"
FieldEnd                   -[#595959,dashed]->  FieldLenght               : "«create»"
FieldEnd                  "1" *-[#595959,plain]-> "fieldLenght\n1" FieldLenght               
FieldEnd                   -[#000082,plain]-^  Location                  
FieldMiddle                -[#595959,dashed]->  FieldEnd                  : "«create»"
FieldMiddle                -[#595959,dashed]->  FieldLenght               : "«create»"
FieldMiddle               "1" *-[#595959,plain]-> "fieldLenght\n1" FieldLenght               
FieldMiddle               "1" *-[#595959,plain]-> "groundType\n1" GroundType                
FieldMiddle                -[#000082,plain]-^  Location                  
FieldStart                 -[#595959,dashed]->  FieldMiddle               : "«create»"
FieldStart                 -[#000082,plain]-^  Location                  
LeaveField                "1" *-[#595959,plain]-> "characterName\n1" CharacterName             
Location                  "1" *-[#595959,plain]-> "character\n1" BasicCharacter            
Location                   -[#008200,dashed]-^  IBasicObj                 
Location                   -[#595959,dashed]->  RandomWrapper             : "«create»"
Location                  "1" *-[#595959,plain]-> "rnd\n1" RandomWrapper             
Main                       -[#595959,dashed]->  BasicCharacter            : "«create»"
Main                       -[#595959,dashed]->  FieldStart                : "«create»"
Main                       -[#595959,dashed]->  RandomWrapper             : "«create»"
MakeSteps                 "1" *-[#595959,plain]-> "energy\n1" CharacterEnergy           
MakeSteps                 "1" *-[#595959,plain]-> "name\n1" CharacterName             
RandomWrapper              -[#595959,dashed]->  Potato                    : "«create»"
ReclaimPotatoes           "1" *-[#595959,plain]-> "characterCloth\n1" CharacterCloth            
ReclaimPotatoes           "1" *-[#595959,plain]-> "characterEnergy\n1" CharacterEnergy           
ReclaimPotatoes           "1" *-[#595959,plain]-> "goFurther\n1" GoFurther                 
ReclaimPotatoes           "1" *-[#595959,plain]-> "rnd\n1" RandomWrapper             
SavePotatoes              "1" *-[#595959,plain]-> "cloth\n1" CharacterCloth            
SavePotatoes              "1" *-[#595959,plain]-> "name\n1" CharacterName             
SmellFood                 "1" *-[#595959,plain]-> "rnd\n1" RandomWrapper             
TellBadWords              "1" *-[#595959,plain]-> "name\n1" CharacterName             
ThrowPotatoes             "1" *-[#595959,plain]-> "cloth\n1" CharacterCloth            
ThrowPotatoes             "1" *-[#595959,plain]-> "name\n1" CharacterName
@enduml